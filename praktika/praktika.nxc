//
#include "LSA-lib.nxc"
#include "utils.nxc"
#include "movement.nxc"

int state = MOVE_STATE;

int read_colors() {
	switch (RGB_SENSOR) {
	case INPUT_BLUECOLOR:  return BLUE;
	case INPUT_REDCOLOR:   return RED;
	case INPUT_GREENCOLOR: return GREEN;
	default:	       return OTHER;
	}
}

void set_sensors() {
	SetSensorColorFull(RGB_PORT);
	SetSensorLowspeed(US_PORT);
	SetSensorLowspeed(LSA_PORT);
	LSA_WakeUp(LSA_PORT, ADDR);
}

task main() {
	int balio, i;

	set_sensors();
	while(true) {		
		int cur_color = read_colors();
		switch(state) {
		case MOVE_STATE:
			fast_movement();

			if (cur_color == next_color()) {				
				advance_color();
				state = get_color_state(cur_color);								 
			} else if (SensorUS(US_PORT) < 20 && next_color() == RED) {
				state = DANGER_STATE;
			} else if (SensorUS(US_PORT) < 10 && next_color() != RED) {
				state = DANGER_STATE;
			}
			break;
		case RED_STATE:
		case BLUE_STATE:
		case GREEN_WAIT_STATE:	
			stop_movement();		
			if (SensorUS(US_PORT) > 40) {
				state = MOVE_STATE;
				Wait(2500);
			}
			break;
		case GREEN_STATE:
			stop_movement();
			if (SensorUS(US_PORT) < 30)
				state = GREEN_WAIT_STATE;
			break;
		case DANGER_STATE:
			stop_movement();
			PlaySound(SOUND_DOUBLE_BEEP);			
			if (SensorUS(US_PORT) > 35)
				state = MOVE_STATE;
			break;
		}
		Wait(ITXOIN_DENB);
	}
}
