//
#define LSA_PORT IN_1
#define ADDR 0x14

#define RGB_PORT S2
#define RGB_SENSOR SENSOR_2
#define RED 1
#define GREEN 2
#define BLUE 3
#define OTHER 4

#define US_PORT S3

#define ITXOIN_DENB 10

#define RIGHT_MOTOR OUT_A
#define LEFT_MOTOR  OUT_C
#define MUGA 5
#define LEFT 0
#define RIGHT 1
#define MIN(x, y) ((x < y) ? (x) : (y))
#define ABS(x) ((x < 0) ? (-x) : (x))
#define SENSITIVITY 2
#define SPEED 80

#define RED_STATE 1
#define BLUE_STATE 2
#define GREEN_STATE 3
#define GREEN_WAIT_STATE 4
#define MOVE_STATE 5


int pow(float base, int exp) {
	float ans = 1;
	while(exp--) ans *= base;
	return ans;
}

int range(int from, int to, int value) {
	if (value < from) return from;
	if (value > to)   return to;
	return value;
}

int color = GREEN;
int next_color() {
	switch(color) {
	case RED:	return BLUE;
	case BLUE:	return GREEN;
	case GREEN:	return RED;		
	}
}

int advance_color() {
	switch(color) {
	case RED:	color = BLUE;  break;
	case BLUE:	color = GREEN; break;
	case GREEN:	color = RED;   break;
	}
}
int get_color_state(int col) {
	switch(col) {
	case RED:	return RED_STATE;
	case BLUE:	return BLUE_STATE;
	case GREEN:	return GREEN_STATE;		
	}

}

